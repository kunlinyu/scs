/*
 *	VERSION:	SCS_API V1.0
 *	DATE:		2013.AUG.1
 *	NEW:		reed switch
 *			Barrier color
 *			custom windows
 *	NOTE:		DO NOT EDIT THIS FILE !!!
 */

#ifndef _SCS_H_
#define _SCS_H_

#include "vector.h"

#define VGA_WIDTH	640
#define VGA_HEIGHT	480
#define QVGA_WIDTH	320
#define QVGA_HEIGHT	240
#define MY_WIDTH	160
#define MY_HEIGHT	120

#ifdef	VGA
#	define GRAPH_WIDTH	VGA_WIDTH
#	define GRAPH_HEIGHT	VGA_HEIGHT
#else
#ifdef	QVGA
#	define GRAPH_WIDTH	QVGA_WIDTH
#	define GRAPH_HEIGHT	QVGA_HEIGHT
#else
#	define GRAPH_WIDTH	MY_WIDTH
#	define GRAPH_HEIGHT	MY_HEIGHT
#endif
#endif


enum CarType {
	camera,electromagnetic,balance,
};


/*	Initial Func	*/
void sSetCar (CarType ct);		// Set type of car, Which can be "camera" or "electromagnetic" or "balance"
void sSetAiFunc (void f());		// Set call back function of ai
void sSetInitFunc (void f());	// Set initial call back function
void sSetTrack (const char * s);	// Set the path of track file
void scsMainLoop (int * argc, char *argv[]);// Run SCS main loop


/*	Enable function Func	*/
void sEnableRoute ();			// Record route of chassis and draw
void sEnableReverse ();			// Set the running direction of the car
void sEnablePath ();			// Show the optimized path
void sEnablePath (double security);	// Set security which means the distance between car and border of track
void sEnableMiddleLine ();		// Set Middle Line


/*	Physics Func	*/
void sSetCamera (sVector pos);		// Set the position of camera
void sSetCCD (sVector pos);		// Set the position of CCD
void sSetDepressionAngle (double depressionangle);// Set the depression angle of camera
void sSetBatteryPosition (sVector pos);	// Set position of battery


/*	Motor Func	*/
void sSetMotor (int voltage);		// Set average speed of motors
void sSetMotorL (int voltage);		// Set speed of left motor
void sSetMotorR (int voltage);		// Set speed of right motor
void sSetServoDir (int dir);		// Set servo motor's direction to set steer


/*	Sensor Func	*/
double sGetASpeedL ();			// Get angular speed of left motor
double sGetASpeedR ();			// Get angular speed of right motor
double sGetASpeed ();			// Get average angular speed of motors
double sGetSpeedL ();			// Get linear speed of left motor
double sGetSpeedR ();			// Get linear speed of right motor
double sGetSpeed ();			// Get average linear speed of motors
sVector sGetAngularSpeed ();		// Get angular speed of chassis of car
sVector sGetAcc ();			// Get accelerate of car
sVector sGetMagnetic (sVector pos);	// Get the magnetic strength (vector) of the position
int sGetReedSwitch ();			// Get the state of reed switch


/*	Graph Func	*/
void sGetGraph (unsigned char graph[GRAPH_HEIGHT][GRAPH_WIDTH]);// Get graph, no return value
void sGetLine (unsigned char line[GRAPH_WIDTH]);		// Get the middle line of graph


/*	Custom Window Func	*/
void sEnableCustomWindow ();	// Show one custom window to draw something
void sEnableCustomWindow (int num);	// Show n custom windows to draw something
void sSetDisplayFunc (void f());// Set call back function of display to the first window
void sSetDisplayFunc (void f(), int num);// Set call back function of display to the numth window


/*	Register Func	*/
void sRegister (const char * s);	// To register this software


#endif
